{
	"name": "flowletdataflow",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "flowletInput",
						"type": "DatasetReference"
					},
					"name": "inputforflowlet"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "flowletoutput",
						"type": "DatasetReference"
					},
					"name": "sink1",
					"rejectedDataLinkedService": {
						"referenceName": "AzureBlobStorage1",
						"type": "LinkedServiceReference"
					}
				}
			],
			"transformations": [
				{
					"name": "flowlet1",
					"flowlet": {
						"referenceName": "flowletfilter",
						"type": "DataFlowReference"
					}
				}
			],
			"scriptLines": [
				"source(output(",
				"          EMPLOYEE_ID as string,",
				"          NAME as string,",
				"          SALARY as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> inputforflowlet",
				"inputforflowlet compose(mapColumn(",
				"          EMPLOYEE_ID,",
				"          NAME,",
				"          SALARY",
				"     ),",
				"     composition: 'flowletfilter') ~> flowlet1@(output1)",
				"flowlet1@output1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     partitionFileNames:['flowletoutput1.csv'],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1)) ~> sink1"
			]
		}
	}
}