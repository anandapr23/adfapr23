{
	"name": "Window",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "Emp_Saldataset",
						"type": "DatasetReference"
					},
					"name": "source1"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "Outputdataset",
						"type": "DatasetReference"
					},
					"name": "sink1"
				},
				{
					"dataset": {
						"referenceName": "Outputdataset",
						"type": "DatasetReference"
					},
					"name": "sink2"
				}
			],
			"transformations": [
				{
					"name": "rank1"
				},
				{
					"name": "window1"
				},
				{
					"name": "window2"
				}
			],
			"scriptLines": [
				"source(output(",
				"          emp_id as string,",
				"          Name as string,",
				"          Salary as integer,",
				"          department_name as string,",
				"          country_id as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> source1",
				"source1 rank(desc(Salary, true),",
				"     output(Rank_Table as long)) ~> rank1",
				"rank1 window(over(department_name),",
				"     desc(Salary, true),",
				"     Rank_Partition = rank(),",
				"          dense_rank_Partition = denseRank()) ~> window1",
				"source1 window(asc(Salary, true),",
				"     Running_Total = sum(Salary)) ~> window2",
				"window2 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     partitionFileNames:['Running_Totalcsv'],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1)) ~> sink1",
				"window1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     partitionFileNames:['Window_Rank.csv'],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1)) ~> sink2"
			]
		}
	}
}